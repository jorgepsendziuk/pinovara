const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// Mapeamento dos campos que foram corrigidos (ANTES ‚Üí DEPOIS)
const mapeamentoCorrecoes = {
  // Governan√ßa - Controles Internos (P22-P27)
  'go_controle_20': 'go_controle_22', // P22
  'go_controle_21': 'go_controle_23', // P23
  'go_controle_22': 'go_controle_24', // P24
  'go_controle_23': 'go_controle_25', // P25
  'go_controle_24': 'go_controle_26', // P26
  'go_controle_25': 'go_controle_27', // P27
  
  // Governan√ßa - Educa√ß√£o (P28-P30)
  'go_educacao_26': 'go_educacao_28', // P28
  'go_educacao_27': 'go_educacao_29', // P29
  'go_educacao_28': 'go_educacao_30', // P30
  
  // Gest√£o Comercial - Estrat√©gia (P16-P21)
  'gc_comercial_15': 'gc_comercial_16', // P16
  'gc_comercial_16': 'gc_comercial_17', // P17
  'gc_comercial_17': 'gc_comercial_18', // P18
  'gc_comercial_18': 'gc_comercial_19', // P19
  'gc_comercial_19': 'gc_comercial_20', // P20
  'gc_comercial_20': 'gc_comercial_21', // P21
  
  // Gest√£o Comercial - Modelo (P22-P28)
  'gc_modelo_21': 'gc_modelo_22', // P22
  'gc_modelo_22': 'gc_modelo_23', // P23
  'gc_modelo_23': 'gc_modelo_24', // P24
  'gc_modelo_24': 'gc_modelo_25', // P25
  'gc_modelo_25': 'gc_modelo_26', // P26
  'gc_modelo_26': 'gc_modelo_27', // P27
  'gc_modelo_27': 'gc_modelo_28', // P28
};

// Textos das perguntas para refer√™ncia
const textosPerguntas = {
  // Governan√ßa - Controles Internos
  'go_controle_22': 'O conselho fiscal √© atuante no empreendimento?',
  'go_controle_23': 'A dire√ß√£o se re√∫ne periodicamente com o conselho fiscal?',
  'go_controle_24': 'A dire√ß√£o tem o h√°bito de apresentar periodicamente relat√≥rios cont√°beis, financeiros e administrativos?',
  'go_controle_25': 'Realiza assembleias anuais para presta√ß√£o de contas?',
  'go_controle_26': 'Possui mecanismos de controle, monitoramento e avalia√ß√£o do alcance de objetivos e metas?',
  'go_controle_27': 'H√° canais para d√∫vidas e sugest√µes em rela√ß√£o aos relat√≥rios e informa√ß√µes compartilhados?',
  
  // Governan√ßa - Educa√ß√£o
  'go_educacao_28': 'Existe processo de forma√ß√£o continuada dos cooperados/associados?',
  'go_educacao_29': 'Os cooperados/associados s√£o capacitados em Gest√£o do Empreendimento?',
  'go_educacao_30': 'H√° planos para identificar, capacitar e preparar novos l√≠deres?',
  
  // Gest√£o Comercial - Estrat√©gia
  'gc_comercial_16': 'Adota estrat√©gias comerciais definidas?',
  'gc_comercial_17': 'Os produtos/empreendimento possuem marca comercial?',
  'gc_comercial_18': 'Realiza ou utiliza pesquisa/estudo de mercado?',
  'gc_comercial_19': 'Conhece os concorrentes e acompanha pre√ßos?',
  'gc_comercial_20': 'Possui plano de marketing?',
  'gc_comercial_21': 'Realiza promo√ß√µes e divulga√ß√£o dos produtos/servi√ßos?',
  
  // Gest√£o Comercial - Modelo
  'gc_modelo_22': 'Existe regularidade nas vendas, com contratos permanentes?',
  'gc_modelo_23': 'Possui Modelo de Neg√≥cio definido?',
  'gc_modelo_24': 'Tem definido p√∫blico-alvo e canais de comercializa√ß√£o?',
  'gc_modelo_25': 'Possui estrat√©gias de precifica√ß√£o baseadas em custos e mercado?',
  'gc_modelo_26': 'Tem controle de qualidade dos produtos/servi√ßos?',
  'gc_modelo_27': 'Possui sistema de p√≥s-venda e relacionamento com clientes?',
  'gc_modelo_28': 'Tem estrat√©gias para diversifica√ß√£o de produtos/servi√ßos?',
};

async function mostrarMapeamentoAnterior() {
  try {
    console.log('üîç MAPEAMENTO ANTERIOR DOS DADOS DO DIAGN√ìSTICO\n');
    console.log('=' .repeat(100));
    console.log('üìã COMO OS DADOS ESTAVAM MAPEADOS ANTES DAS CORRE√á√ïES');
    console.log('=' .repeat(100));
    
    // Buscar organiza√ß√µes validadas
    const organizacoesValidadas = await prisma.organizacao.findMany({
      where: { validacao_status: 3 },
      select: { id: true, nome: true },
      orderBy: { id: 'asc' }
    });

    console.log(`üìä Organiza√ß√µes validadas encontradas: ${organizacoesValidadas.length}\n`);

    for (const org of organizacoesValidadas) {
      console.log(`üè¢ Organiza√ß√£o ID ${org.id}: ${org.nome}`);
      
      // Buscar dados completos da organiza√ß√£o
      const orgCompleta = await prisma.organizacao.findUnique({
        where: { id: org.id }
      });

      if (!orgCompleta) {
        console.log('   ‚ùå Organiza√ß√£o n√£o encontrada\n');
        continue;
      }

      console.log('\n   üìã MAPEAMENTO ANTERIOR (COMO ESTAVA ANTES):');
      
      // Mostrar como os dados estavam mapeados antes
      for (const [campoAntigo, campoNovo] of Object.entries(mapeamentoCorrecoes)) {
        const valorAntigo = orgCompleta[`${campoAntigo}_resposta`];
        const valorNovo = orgCompleta[`${campoNovo}_resposta`];
        
        if (valorAntigo !== null && valorAntigo !== undefined) {
          const perguntaAntiga = textosPerguntas[campoNovo]; // A pergunta que aparecia na tela
          const perguntaNova = textosPerguntas[campoNovo];   // A pergunta correta agora
          
          console.log(`\n   üîÑ Campo: ${campoAntigo} ‚Üí ${campoNovo}`);
          console.log(`      üìù Pergunta que aparecia: ${perguntaAntiga}`);
          console.log(`      üíæ Dados salvos em: ${campoAntigo}_resposta = ${valorAntigo}`);
          console.log(`      üìä Coment√°rio: ${orgCompleta[`${campoAntigo}_comentario`] || 'N/A'}`);
          console.log(`      üí° Proposta: ${orgCompleta[`${campoAntigo}_proposta`] || 'N/A'}`);
          
          // Mostrar o problema espec√≠fico
          console.log(`      ‚ö†Ô∏è  PROBLEMA: A resposta ${valorAntigo} estava sendo salva no campo ${campoAntigo}, mas aparecia na pergunta "${perguntaAntiga}"`);
        }
      }

      console.log('\n   üìã MAPEAMENTO ATUAL (COMO EST√Å AGORA):');
      
      // Mostrar como os dados est√£o mapeados agora
      for (const [campoAntigo, campoNovo] of Object.entries(mapeamentoCorrecoes)) {
        const valorNovo = orgCompleta[`${campoNovo}_resposta`];
        
        if (valorNovo !== null && valorNovo !== undefined) {
          const perguntaNova = textosPerguntas[campoNovo];
          
          console.log(`\n   ‚úÖ Campo: ${campoNovo}`);
          console.log(`      üìù Pergunta correta: ${perguntaNova}`);
          console.log(`      üíæ Dados salvos em: ${campoNovo}_resposta = ${valorNovo}`);
          console.log(`      üìä Coment√°rio: ${orgCompleta[`${campoNovo}_comentario`] || 'N/A'}`);
          console.log(`      üí° Proposta: ${orgCompleta[`${campoNovo}_proposta`] || 'N/A'}`);
        }
      }

      console.log('\n' + '=' .repeat(100));
    }

    console.log('\nüìã RESUMO DO MAPEAMENTO ANTERIOR:');
    console.log('=' .repeat(100));
    
    console.log('\nüîß CAMPOS QUE FORAM CORRIGIDOS:');
    console.log('\nüìù Governan√ßa Organizacional - Controles Internos:');
    console.log('   P22: go_controle_20 ‚Üí go_controle_22');
    console.log('   P23: go_controle_21 ‚Üí go_controle_23');
    console.log('   P24: go_controle_22 ‚Üí go_controle_24');
    console.log('   P25: go_controle_23 ‚Üí go_controle_25');
    console.log('   P26: go_controle_24 ‚Üí go_controle_26');
    console.log('   P27: go_controle_25 ‚Üí go_controle_27');
    
    console.log('\nüìù Governan√ßa Organizacional - Educa√ß√£o:');
    console.log('   P28: go_educacao_26 ‚Üí go_educacao_28');
    console.log('   P29: go_educacao_27 ‚Üí go_educacao_29');
    console.log('   P30: go_educacao_28 ‚Üí go_educacao_30');
    
    console.log('\nüìù Gest√£o Comercial - Estrat√©gia:');
    console.log('   P16: gc_comercial_15 ‚Üí gc_comercial_16');
    console.log('   P17: gc_comercial_16 ‚Üí gc_comercial_17');
    console.log('   P18: gc_comercial_17 ‚Üí gc_comercial_18');
    console.log('   P19: gc_comercial_18 ‚Üí gc_comercial_19');
    console.log('   P20: gc_comercial_19 ‚Üí gc_comercial_20');
    console.log('   P21: gc_comercial_20 ‚Üí gc_comercial_21');
    
    console.log('\nüìù Gest√£o Comercial - Modelo:');
    console.log('   P22: gc_modelo_21 ‚Üí gc_modelo_22');
    console.log('   P23: gc_modelo_22 ‚Üí gc_modelo_23');
    console.log('   P24: gc_modelo_23 ‚Üí gc_modelo_24');
    console.log('   P25: gc_modelo_24 ‚Üí gc_modelo_25');
    console.log('   P26: gc_modelo_25 ‚Üí gc_modelo_26');
    console.log('   P27: gc_modelo_26 ‚Üí gc_modelo_27');
    console.log('   P28: gc_modelo_27 ‚Üí gc_modelo_28');

    console.log('\n‚ö†Ô∏è  PROBLEMA IDENTIFICADO:');
    console.log('Os dados estavam sendo salvos em campos incorretos, mas apareciam nas perguntas certas na tela.');
    console.log('Isso causava inconsist√™ncia entre o que era exibido e o que era salvo no banco de dados.');

  } catch (error) {
    console.error('‚ùå Erro durante a an√°lise:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

mostrarMapeamentoAnterior();
